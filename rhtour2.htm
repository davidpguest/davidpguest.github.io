<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" prefix="dc: http://purl.org/dc/elements/1.1/">
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Ted Power."/><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"/>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

<meta name="dc:creator" content="Ted Power" />
<meta name="dc:title" content="A Tour of Round Hill - part 2" />



<title>
A Tour of Round Hill - part 2
</title>

<!-- Made with executable version 7.0 Release 0 Build 7 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style>


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 7.0 Release 0 Build 7 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: Geneva,Arial,sans-serif;
	background-color: #ffffff;
	color: #000000;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 1rem;
}

table,div,span,td{
	font-size: 1rem;
	color: #000000;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #000033;
}

button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 1rem;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #000033;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #000033;
}

div.StdDiv, div.ExerciseContainer, div.ReadingContainer{
	background-color: #bbbbee;
	text-align: center;
	font-size: 1rem;
	color: #000000;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin-bottom: 1px;
}

div.ReadingContainer, div.ExerciseContainer{
	min-width: 15em;
	flex-grow: 1;
	flex-basis: 0;
	margin: 1px;
}

div.ReadingContainer, div.ReadingContainer + div.ExerciseContainer{
	width: 48%;
}

div#ContainerDiv{
	margin: -1px;
	padding: 0;
	border: none;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial,sans-serif; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial,sans-serif; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", Geneva,Arial,sans-serif;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #000033;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #000033;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #000033;
}

.LeftItem{
	font-size: 1rem;
	color: #000000;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 1rem;
	color: #000000;
}

span.CorrectMark{

}

input, textarea{
	font-family: Geneva,Arial,sans-serif;
	font-size: 120%;
}

select{
	font-size: 1rem;
}

div.Feedback {
	background-color: #ffffff;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #000033;
	position: absolute;
	display: none;
	font-size: 1rem;
}




div.ExerciseDiv{
	color: #000000;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000000;
	border-color: #000000;
	margin-left: auto;
	margin-right: auto;
	margin-top: 2em;
	margin-bottom: 2em;
	/*width: 90%;*/
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #bbbbee;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: #000000;
	box-shadow: 0.2em 0.3em 0.2em #000033;
	background-color: #ffffff;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div.JMixDrag, div.JMatchDrag{
	padding: 0;
	background-color: #ffffff;
	border-style: none;
}

div#GuessDiv{
	padding: 0.5em;
	margin-bottom: 2em;
}

div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
	display: inline-block;
	padding: 0.5em;
	border: solid 1pt gray;
	margin-bottom: 0.5em;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: left;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #000033;
	width: 80%;
	left: 10%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Geneva,Arial,sans-serif;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 1rem;
}

.Answer{
	font-size: 120%;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #000033;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;

	border-left-color: #ddddf6;
	border-top-color: #ddddf6;
	border-right-color: #5d5d77;
	border-bottom-color: #5d5d77;
	color: #000000;
	background-color: #bbbbee;

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em #5d5d77;
}

.FuncButton:active {
	box-shadow: none;
}

.FuncButton:hover{
	color: #bbbbee;
	background-color: #000000;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #000066;
	text-align: center;
	margin: 0.25rem 0;
	clear: both;
	font-size: 1rem;
	padding: 0.2rem;
}

.NavButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;
	
	border-left-color: #7f7fb2;
	border-top-color: #7f7fb2;
	border-right-color: #000033;
	border-bottom-color: #000033; 
	background-color: #000066;
	color: #ffffff;

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em #000033;
}

.NavButton:active {
	box-shadow: none;
}

.NavButton:hover{
	color: #000066;
	background-color: #ffffff;
}

/*EndNavBarStyle*/

a{
	color: #0000FF;
}

a:visited{
	color: #0000CC;
}

a:hover{
	color: #0000FF;
}

div.CardStyle {
	position: absolute;
	font-family: Geneva,Arial,sans-serif;
	font-size: 1rem;
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 2em;
	border-width: 1pt;
	color: #000000;
	box-shadow: 0.2em 0.3em 0.2em #000000;
	background-color: #bbbbee;
	left: -50px;
	top: -50px;
	overflow: visible;
	touch-action: none;
	user-select: none;
	box-sizing: border-box;
}

div.CardStyleCentered{
	text-align: center;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script>

//<![CDATA[

<!--




//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
			}
			else{
				Els[i].style.visibility = 'hidden';
			}
		} 
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].offsetWidth;
	this.H = document.getElementsByTagName('body')[0].offsetHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	thisKey = e.keyCode;

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
		e.preventDefault();
	}
}

window.addEventListener('keypress',SuppressBackspace,false);

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}





//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}





//JCLOZE CORE JAVASCRIPT CODE

function ItemState(){
	this.ClueGiven = false;
	this.HintsAndChecks = 0;
	this.MatchedAnswerLength = 0;
	this.ItemScore = 0;
	this.AnsweredCorrectly = false;
	this.Guesses = new Array();
	return this;
}

var Feedback = '';
var Correct = 'Correct!';
var Incorrect = 'Some of your answers are incorrect. They have been left in place.'; 
var GiveHint = 'Next correct letter is: ';
var CaseSensitive = false;
var YourScoreIs = 'Your score is ';
var Finished = false;
var Locked = false;
var Score = 0;
var CurrentWord = 0;
var Guesses = '';
var TimeOver = false;

I = new Array();

I[0] = new Array();
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0] = '\u006A\u0075\u006E\u0063\u0074\u0069\u006F\u006E';
I[0][2]='\u0077\u0068\u0065\u0072\u0065\u0020\u0074\u0077\u006F\u0020\u0072\u006F\u0061\u0064\u0073\u0020\u006A\u006F\u0069\u006E';

I[1] = new Array();
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0] = '\u0062\u0065\u0074\u0077\u0065\u0065\u006E';
I[1][2]='\u0070\u0072\u0065\u0070\u006F\u0073\u0069\u0074\u0069\u006F\u006E\u0020\u0062\u0065\u0067\u0069\u006E\u006E\u006E\u0067\u0020\u0077\u0069\u0074\u0068\u0020\u0022\u0062\u0022';

I[2] = new Array();
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0] = '\u0063\u0061\u0072';
I[2][2]='\u0061\u0075\u0074\u006F\u006D\u006F\u0062\u0069\u006C\u0065';

I[3] = new Array();
I[3][1] = new Array();
I[3][1][0] = new Array();
I[3][1][0][0] = '\u0073\u0065\u006D\u0069\u002D\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064';
I[3][2]='\u0074\u0077\u006F\u0020\u0068\u006F\u0075\u0073\u0065\u0073\u0020\u006A\u006F\u0069\u006E\u0065\u0064\u0020\u0074\u006F\u0067\u0065\u0074\u0068\u0065\u0072\u0020\u006F\u006E\u0020\u0074\u0068\u0065\u0069\u0072\u0020\u006F\u0077\u006E';

I[4] = new Array();
I[4][1] = new Array();
I[4][1][0] = new Array();
I[4][1][0][0] = '\u0042\u0061\u006C\u006C';
I[4][2]='\u0072\u006F\u0075\u006E\u0064\u0020\u006F\u0062\u006A\u0065\u0063\u0074\u0020\u0075\u0073\u0065\u0064\u0020\u0069\u006E\u0020\u0073\u0070\u006F\u0072\u0074';

I[5] = new Array();
I[5][1] = new Array();
I[5][1][0] = new Array();
I[5][1][0][0] = '\u0061\u0062\u006F\u0075\u0074';
I[5][2]='\u0061\u0070\u0070\u0072\u006F\u0078\u0069\u006D\u0061\u0074\u0065\u006C\u0079';

I[6] = new Array();
I[6][1] = new Array();
I[6][1][0] = new Array();
I[6][1][0][0] = '\u0042\u006F\u006F\u006B\u0073';
I[6][2]='\u0072\u0065\u0061\u0064\u0069\u006E\u0067\u0020\u006D\u0061\u0074\u0065\u0072\u0069\u0061\u006C\u0073';

I[7] = new Array();
I[7][1] = new Array();
I[7][1][0] = new Array();
I[7][1][0][0] = '\u0061\u0020\u006C\u006F\u0074\u0020\u006F\u0066';
I[7][2]='\u006D\u0075\u0063\u0068';

I[8] = new Array();
I[8][1] = new Array();
I[8][1][0] = new Array();
I[8][1][0][0] = '\u0073\u0075\u006D\u006D\u0069\u0074';
I[8][2]='\u0068\u0069\u0067\u0068\u0065\u0073\u0074\u0020\u0070\u006F\u0069\u006E\u0074\u0020\u006F\u0066\u0020\u0068\u0069\u006C\u006C';

I[9] = new Array();
I[9][1] = new Array();
I[9][1][0] = new Array();
I[9][1][0][0] = '\u0068\u0061\u006C\u0066\u0077\u0061\u0079';
I[9][2]='\u006D\u0069\u0064\u002D\u0077\u0061\u0079';

I[10] = new Array();
I[10][1] = new Array();
I[10][1][0] = new Array();
I[10][1][0][0] = '\u0062\u0065\u006C\u006F\u006E\u0067\u0069\u006E\u0067';
I[10][2]='\u0062\u0065\u0069\u006E\u0067\u0020\u006F\u0077\u006E\u0065\u0064';

I[11] = new Array();
I[11][1] = new Array();
I[11][1][0] = new Array();
I[11][1][0][0] = '\u0063\u006F\u006D\u0070\u006C\u0065\u0074\u0065';
I[11][2]='\u0063\u006F\u006D\u0070\u0072\u0065\u0068\u0065\u006E\u0073\u0069\u0076\u0065';

I[12] = new Array();
I[12][1] = new Array();
I[12][1][0] = new Array();
I[12][1][0][0] = '\u0073\u0074\u0061\u0072\u0074\u0065\u0064';
I[12][2]='\u0062\u0065\u0067\u0075\u006E';

I[13] = new Array();
I[13][1] = new Array();
I[13][1][0] = new Array();
I[13][1][0][0] = '\u0073\u006F\u006C\u0065';
I[13][2]='\u006F\u006E\u006C\u0079';

I[14] = new Array();
I[14][1] = new Array();
I[14][1][0] = new Array();
I[14][1][0][0] = '\u0070\u0061\u0073\u0073\u0065\u0064';
I[14][2]='\u0064\u0069\u0065\u0064';

I[15] = new Array();
I[15][1] = new Array();
I[15][1][0] = new Array();
I[15][1][0][0] = '\u0069\u006E\u0063\u0072\u0065\u0061\u0073\u0065\u0073';
I[15][2]='\u006F\u0070\u0070\u006F\u0073\u0069\u0074\u0065\u0020\u006F\u0066\u0020\u0064\u0065\u0064\u0075\u0063\u0074\u0069\u006F\u006E\u0073';

I[16] = new Array();
I[16][1] = new Array();
I[16][1][0] = new Array();
I[16][1][0][0] = '\u0063\u0068\u0061\u006E\u0067\u0065\u0064';
I[16][2]='\u0061\u006C\u0074\u0065\u0072\u0065\u0064';

I[17] = new Array();
I[17][1] = new Array();
I[17][1][0] = new Array();
I[17][1][0][0] = '\u006C\u0061\u0075\u006E\u0064\u0072\u0079';
I[17][2]='\u0077\u0061\u0073\u0068\u0020\u0068\u006F\u0075\u0073\u0065\u0020\u0066\u006F\u0072\u0020\u0063\u006C\u006F\u0074\u0068\u0065\u0073';

I[18] = new Array();
I[18][1] = new Array();
I[18][1][0] = new Array();
I[18][1][0][0] = '\u0074\u006F\u006F';
I[18][1][1] = new Array();
I[18][1][1][0]='\u0061\u006C\u0073\u006F';
I[18][2]='\u0061\u0073\u0020\u0077\u0065\u006C\u006C';

I[19] = new Array();
I[19][1] = new Array();
I[19][1][0] = new Array();
I[19][1][0][0] = '\u0062\u006F\u0074\u0068';
I[19][2]='\u0074\u0077\u006F\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006F\u006E\u0073';

I[20] = new Array();
I[20][1] = new Array();
I[20][1][0] = new Array();
I[20][1][0][0] = '\u006C\u0061\u0072\u0067\u0065\u0072';
I[20][2]='\u0062\u0069\u0067\u0067\u0065\u0072';

I[21] = new Array();
I[21][1] = new Array();
I[21][1][0] = new Array();
I[21][1][0][0] = '\u0066\u006F\u0075\u006E\u0064\u0065\u0064';
I[21][2]='\u0073\u0074\u0061\u0072\u0074\u0065\u0064';

I[22] = new Array();
I[22][1] = new Array();
I[22][1][0] = new Array();
I[22][1][0][0] = '\u0062\u0075\u0069\u006C\u0074';
I[22][1][1] = new Array();
I[22][1][1][0]='\u0065\u0072\u0065\u0063\u0074\u0065\u0064';
I[22][2]='\u0063\u006F\u006E\u0073\u0074\u0072\u0075\u0063\u0074\u0065\u0064';

I[23] = new Array();
I[23][1] = new Array();
I[23][1][0] = new Array();
I[23][1][0][0] = '\u0069\u006E\u0063\u006C\u0069\u006E\u0065';
I[23][1][1] = new Array();
I[23][1][1][0]='\u0073\u006C\u006F\u0070\u0065';
I[23][2]='';

I[24] = new Array();
I[24][1] = new Array();
I[24][1][0] = new Array();
I[24][1][0][0] = '\u0068\u0069\u0067\u0068\u0065\u0073\u0074';
I[24][2]='\u0061\u0074\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0073\u0074\u0020\u0061\u006C\u0074\u0069\u0074\u0075\u0064\u0065';

I[25] = new Array();
I[25][1] = new Array();
I[25][1][0] = new Array();
I[25][1][0][0] = '\u0073\u0075\u0069\u0074\u0061\u0062\u006C\u0065';
I[25][2]='\u0061\u0070\u0070\u0072\u006F\u0070\u0072\u0069\u0061\u0074\u0065';

I[26] = new Array();
I[26][1] = new Array();
I[26][1][0] = new Array();
I[26][1][0][0] = '\u006C\u006F\u0063\u0061\u0074\u0065\u0064';
I[26][2]='\u0073\u0069\u0074\u0065\u0064';

I[27] = new Array();
I[27][1] = new Array();
I[27][1][0] = new Array();
I[27][1][0][0] = '\u0066\u0069\u0072\u0073\u0074';
I[27][2]='\u0065\u0061\u0072\u006C\u0069\u0065\u0073\u0074';

I[28] = new Array();
I[28][1] = new Array();
I[28][1][0] = new Array();
I[28][1][0][0] = '\u0068\u0069\u006C\u006C';
I[28][2]='\u0073\u006C\u006F\u0070\u0065';

I[29] = new Array();
I[29][1] = new Array();
I[29][1][0] = new Array();
I[29][1][0][0] = '\u0053\u0065\u006E\u0069\u006F\u0072';
I[29][2]='\u006F\u0070\u0070\u006F\u0073\u0069\u0074\u0065\u0020\u0074\u006F\u0020\u004A\u0075\u006E\u0069\u006F\u0072';

I[30] = new Array();
I[30][1] = new Array();
I[30][1][0] = new Array();
I[30][1][0][0] = '\u0077\u0065\u0073\u0074';
I[30][2]='\u006F\u0070\u0070\u006F\u0073\u0069\u0074\u0065\u0020\u006F\u0066\u0020\u0065\u0061\u0073\u0074';

I[31] = new Array();
I[31][1] = new Array();
I[31][1][0] = new Array();
I[31][1][0][0] = '\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064';
I[31][2]='\u006E\u006F\u0074\u0020\u0063\u006F\u006E\u006E\u0065\u0063\u0074\u0065\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006E\u0079\u0020\u006F\u0074\u0068\u0065\u0072\u0020\u0068\u006F\u0075\u0073\u0065';

I[32] = new Array();
I[32][1] = new Array();
I[32][1][0] = new Array();
I[32][1][0][0] = '\u0050\u0072\u0069\u006E\u0063\u0065\u0073';
I[32][2]='\u0073\u0074\u0072\u0065\u0065\u0074\u0020\u006E\u0061\u006D\u0065';

I[33] = new Array();
I[33][1] = new Array();
I[33][1][0] = new Array();
I[33][1][0][0] = '\u0073\u006F\u006C\u0065';
I[33][2]='\u006F\u006E\u006C\u0079';

I[34] = new Array();
I[34][1] = new Array();
I[34][1][0] = new Array();
I[34][1][0][0] = '\u004A\u0075\u006E\u0069\u006F\u0072';
I[34][2]='\u006F\u0070\u0070\u006F\u0073\u0069\u0074\u0065\u0020\u006F\u0066\u0020\u0053\u0065\u006E\u0069\u006F\u0072';

I[35] = new Array();
I[35][1] = new Array();
I[35][1][0] = new Array();
I[35][1][0][0] = '\u0072\u0065\u006D\u0061\u0069\u006E\u0065\u0064';
I[35][2]='\u0073\u0074\u0061\u0079\u0065\u0064';

I[36] = new Array();
I[36][1] = new Array();
I[36][1][0] = new Array();
I[36][1][0][0] = '\u0064\u0065\u0061\u0074\u0068';
I[36][2]='\u0065\u006E\u0064\u0020\u006F\u0066\u0020\u006C\u0069\u0066\u0065';


State = new Array();

function StartUp(){
//Show a keypad if there is one	(added bugfix for 6.0.4.12)
	if (document.getElementById('CharacterKeypad') != null){
		document.getElementById('CharacterKeypad').style.display = 'block';
	}
	





	PreloadImages('rhimages/1897map.jpg','rhimages/book1.jpg','rhimages/laundry50.jpg','rhimages/55and57p.jpg','rhimages/prvilla1.jpg','rhimages/prvilla2.jpg');


	var i = 0;

	State.length = 0;
	for (i=0; i<I.length; i++){
		State[i] = new ItemState();
	}
	
	ClearTextBoxes();
	


}

function ShowClue(ItemNum){
	if (Locked == true){return;}
	State[ItemNum].ClueGiven = true;
	ShowMessage(I[ItemNum][2]);
}

function SaveCurrentAnswers(){
	var Ans = '';
	for (var i=0; i<I.length; i++){
		Ans = GetGapValue(i);
		if ((Ans.length > 0)&&(Ans != State[i].Guesses[State[i].Guesses.length-1])){
			State[i].Guesses[State[i].Guesses.length] = Ans;
		}
	}
}

function CompileGuesses(){
	var F = document.getElementById('store');
	if (F != null){
		var Temp = '<?xml version="1.0"?><hpnetresult><fields>';
		var GapLabel = '';
		for (var i=0; i<State.length; i++){
			GapLabel = 'Gap ' + (i+1).toString();
			Temp += '<field><fieldname>' + GapLabel + '</fieldname>';
			Temp += '<fieldtype>student-responses</fieldtype><fieldlabel>' + GapLabel + '</fieldlabel>';
			Temp += '<fieldlabelid>JClozeStudentResponses</fieldlabelid><fielddata>';
			for (var j=0; j<State[i].Guesses.length; j++){
				if (j>0){Temp += '| ';}
				Temp += State[i].Guesses[j] + ' ';	
			}	
  		Temp += '</fielddata></field>';
		}
		Temp += '</fields></hpnetresult>';
		Detail = Temp;
	}
}

function CheckAnswers(){
	if (Locked == true){return;}
	SaveCurrentAnswers();
	var AllCorrect = true;

//Check each answer
	for (var i = 0; i<I.length; i++){

		if (State[i].AnsweredCorrectly == false){
//If it's right, calculate its score
			if (CheckAnswer(i, true) > -1){
				var TotalChars = GetGapValue(i).length;
				State[i].ItemScore = (TotalChars-State[i].HintsAndChecks)/TotalChars;
				if (State[i].ClueGiven == true){State[i].ItemScore /= 2;}
				if (State[i].ItemScore <0 ){State[i].ItemScore = 0;}
				State[i].AnsweredCorrectly = true;
//Drop the correct answer into the page, replacing the text box
				SetCorrectAnswer(i, GetGapValue(i));
			}
			else{
//Otherwise, increment the hints for this item, as a penalty
				State[i].HintsAndChecks++;

//then set the flag
				AllCorrect = false;
			}
		}
	}

//Calculate the total score
	var TotalScore = 0;
	for (i=0; i<State.length; i++){
		TotalScore += State[i].ItemScore;
	}
	TotalScore = Math.floor((TotalScore * 100)/I.length);

//Compile the output
	Output = '';

	if (AllCorrect == true){
		Output = Correct + '<br />';
	}

	Output += YourScoreIs + ' ' + TotalScore + '%.<br />';
	if (AllCorrect == false){
		Output += Incorrect;
	}
	ShowMessage(Output);
	setTimeout('WriteToInstructions(Output)', 50);
	
	Score = TotalScore;
	CompileGuesses();
	
	if ((AllCorrect == true)||(Finished == true)){
	


		TimeOver = true;
		Locked = true;
		Finished = true;
		setTimeout('Finish()', SubmissionTimeout);
	}

}

function TrackFocus(BoxNumber){
	CurrentWord = BoxNumber;
	InTextBox = true;
}

function LeaveGap(){
	InTextBox = false;
}

function CheckBeginning(Guess, Answer){
	var OutString = '';
	var i = 0;
	var UpperGuess = '';
	var UpperAnswer = '';

	if (CaseSensitive == false) {
		UpperGuess = Guess.toUpperCase();
		UpperAnswer = Answer.toUpperCase();
	}
	else {
		UpperGuess = Guess;
		UpperAnswer = Answer;
	}

	while (UpperGuess.charAt(i) == UpperAnswer.charAt(i)) {
		OutString += Guess.charAt(i);
		i++;
	}
	OutString += Answer.charAt(i);
	return OutString;
}

function GetGapValue(GNum){
	var RetVal = '';
	if ((GNum<0)||(GNum>=I.length)){return RetVal;}
	if (document.getElementById('Gap' + GNum) != null){
		RetVal = document.getElementById('Gap' + GNum).value;
		RetVal = TrimString(RetVal);
	}
	else{
		RetVal = State[GNum].Guesses[State[GNum].Guesses.length-1];
	}
	return RetVal;
}

function SetGapValue(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('Gap' + GNum) != null){
		document.getElementById('Gap' + GNum).value = Val;
		document.getElementById('Gap' + GNum).focus();
	}
}

function SetCorrectAnswer(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('GapSpan' + GNum) != null){
		document.getElementById('GapSpan' + GNum).innerHTML = Val;
	}
}

function FindCurrent() {
	var x = 0;
	FoundCurrent = -1;

//Test the current word:
//If its state is not set to already correct, check the word.
	if (State[CurrentWord].AnsweredCorrectly == false){
		if (CheckAnswer(CurrentWord, false) < 0){
			return CurrentWord;
		}
	}
	
	x=CurrentWord + 1;
	while (x<I.length){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}

	x = 0;
	while (x<CurrentWord){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}
	return FoundCurrent;
}

function CheckAnswer(GapNum, MarkAnswer){
	var Guess = GetGapValue(GapNum);
	var UpperGuess = '';
	var UpperAnswer = '';
	if (CaseSensitive == false){
		UpperGuess = Guess.toUpperCase();
	}
	else{
		UpperGuess = Guess;
	}
	var Match = -1;
	for (var i = 0; i<I[GapNum][1].length; i++){
		if (CaseSensitive == false){
			UpperAnswer = I[GapNum][1][i][0].toUpperCase();
		}
		else{
			UpperAnswer = I[GapNum][1][i][0];
		}
		if (TrimString(UpperGuess) == UpperAnswer){
			Match = i;
			if (MarkAnswer == true){
				State[GapNum].AnsweredCorrectly = true;
			}
		}
	}
	return Match;
}

function GetHint(GapNum){
	Guess = GetGapValue(GapNum);

	if (CheckAnswer(GapNum, false) > -1){return ''}
	RightBits = new Array();
	for (var i=0; i<I[GapNum][1].length; i++){
		RightBits[i] = CheckBeginning(Guess, I[GapNum][1][i][0]);
	}
	var RightOne = FindLongest(RightBits);
	var Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length);
//Add another char if the last one is a space
	if (Result.charAt(Result.length-1) == ' '){
		Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length+1);
	}
	return Result;
}

function ShowHint(){
	if (document.getElementById('FeedbackDiv').style.display == 'block'){return;}
	if (Locked == true){return;}
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}

	var HintString = GetHint(CurrGap);

	if (HintString.length > 0){
		SetGapValue(CurrGap, HintString);
		State[CurrGap].HintsAndChecks += 1;
	}
	ShowMessage(GiveHint);
}

function TypeChars(Chars){
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}
	if (document.getElementById('Gap' + CurrGap) != null){
		SetGapValue(CurrGap, document.getElementById('Gap' + CurrGap).value + Chars);
	}
}








//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location='http://www.roundhill.org.uk'; return false;"> Index </button>



<button class="NavButton" onclick="location='http://www.roundhill.org.uk'; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">A Tour of Round Hill - part 2</h2>



</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions"></div>
</div>


<div id="ContainerDiv">



<div class="ExerciseContainer">






<!-- These top buttons hidden; reveal if required -->
<!--
<button id="CheckButton1" class="FuncButton" onclick="CheckAnswers()">&nbsp;Check&nbsp;</button>



 -->
 
<div id="ClozeDiv">
<form id="Cloze" method="post" onsubmit="return false;">
<div class="ClozeBody">
We continue our tour in Princes Road, halfway up the 1 in 12 hill starting at the <span class="GapSpan" id="GapSpan0"><input type="text" id="Gap0" onfocus="TrackFocus(0)" onblur="LeaveGap()" class="GapBox" size="8"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(0)">Clue</button></span> with the northern end of Mayo Road. Today, there is a small cul-de-sac known as "The Copse" which starts <span class="GapSpan" id="GapSpan1"><input type="text" id="Gap1" onfocus="TrackFocus(1)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(1)">Clue</button></span> numbers 50 and 52 Princes Road. On lower ground, to the east of The Copse is the most westerly section of Mayo Court's <span class="GapSpan" id="GapSpan2"><input type="text" id="Gap2" onfocus="TrackFocus(2)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(2)">Clue</button></span> park. The southern boundary of The Copse leads in the direction of the <span class="GapSpan" id="GapSpan3"><input type="text" id="Gap3" onfocus="TrackFocus(3)" onblur="LeaveGap()" class="GapBox" size="13"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(3)">Clue</button></span> villa at 21 and 23 Richmond Road, which was William Fisher's Golf <span class="GapSpan" id="GapSpan4"><input type="text" id="Gap4" onfocus="TrackFocus(4)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(4)">Clue</button></span> Factory from the 1920s for a period of <span class="GapSpan" id="GapSpan5"><input type="text" id="Gap5" onfocus="TrackFocus(5)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(5)">Clue</button></span> 50 years. <br /><br />More about Mr Fisher's ownership and use of The Copse and 48 & 50 Princes Road from 1957 to 1985 is documented on page 17 of <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.roundhill.org.uk/main.php?sec=history&p=Local_History_Books '); return false;">Rose Hill to Round Hill: a Brighton Community</a> Brighton <span class="GapSpan" id="GapSpan6"><input type="text" id="Gap6" onfocus="TrackFocus(6)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(6)">Clue</button></span> Publishing ISBN 1-901454-08-8.<br /><br /><img src="rhimages/book1.jpg" alt="" title="" width="252" height="343" style="display:block; margin-left:auto; margin-right:auto; text-align:center;" style="float:center;" /><br /><br />Constructed in 1875, 48 Princes Road (now number 50), a flint-walled house with <span class="GapSpan" id="GapSpan7"><input type="text" id="Gap7" onfocus="TrackFocus(7)" onblur="LeaveGap()" class="GapBox" size="8"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(7)">Clue</button></span> character, was built after Princes Villa (1866) and after the semi-detached house at nos 55 & 57 constructed in 1867. These early houses are roughly at the <span class="GapSpan" id="GapSpan8"><input type="text" id="Gap8" onfocus="TrackFocus(8)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(8)">Clue</button></span> of Princes Road. The flint house, <span class="GapSpan" id="GapSpan9"><input type="text" id="Gap9" onfocus="TrackFocus(9)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(9)">Clue</button></span> down the hill to the east, first appears in the <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1880-image-170'); return false;">1880 Directory</a> as <span class="GapSpan" id="GapSpan10"><input type="text" id="Gap10" onfocus="TrackFocus(10)" onblur="LeaveGap()" class="GapBox" size="9"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(10)">Clue</button></span> to Mr John Cheal. The <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1883-image-180'); return false;">1883 Directory</a> is somewhat more <span class="GapSpan" id="GapSpan11"><input type="text" id="Gap11" onfocus="TrackFocus(11)" onblur="LeaveGap()" class="GapBox" size="8"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(11)">Clue</button></span> as it remembers to list 55 Princes Road occupied by Mrs Scutt (laundress). By this time, the terrace beginning at 53 Princes Road, occupied by Mrs Hattelie (laundress), has already been <span class="GapSpan" id="GapSpan12"><input type="text" id="Gap12" onfocus="TrackFocus(12)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(12)">Clue</button></span>. The 8-house terrace stretching from 39 to 53 Princes Road was constrcted by Marston and German. <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.thekeep.info/collections/getrecord/GB179_DB_D_7_1619'); return false;">Records from "The Keep"</a> mysteriously describe an 11-house terrace (I can't count so many houses!) dating from 27th November 1978.<br /><br />The<a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1883-image-180'); return false;">1883 Directory</a> also shows Mrs Ann Cheal as the <span class="GapSpan" id="GapSpan13"><input type="text" id="Gap13" onfocus="TrackFocus(13)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(13)">Clue</button></span> occupant of the flint house at 48 Princes Road - persumably her husband John has <span class="GapSpan" id="GapSpan14"><input type="text" id="Gap14" onfocus="TrackFocus(14)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(14)">Clue</button></span> away.<br /><br />The <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1884-image-180 '); return false;">1884 directory</a> illustrates both the <span class="GapSpan" id="GapSpan15"><input type="text" id="Gap15" onfocus="TrackFocus(15)" onblur="LeaveGap()" class="GapBox" size="9"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(15)">Clue</button></span> in house construction and the numbers of laundries in Princes Road. By 1891, there are <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.roundhill.org.uk/main.php?sec=history&p=Laundries_1891_Princes_Road '); return false;">15 laundries</a> in Princes Road. <br /><br />By 1895, ownership of Hill Cottage (the flint house) has <span class="GapSpan" id="GapSpan16"><input type="text" id="Gap16" onfocus="TrackFocus(16)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(16)">Clue</button></span> three times: first Mr Collins, then Mr John Simmons (laundry man) and Eva Simmons (laundress) and their 25-year old boarder Marian Brennan (laundress) and afterwards Mrs A. Richardson. She ran the downstairs part of the house as a <span class="GapSpan" id="GapSpan17"><input type="text" id="Gap17" onfocus="TrackFocus(17)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(17)">Clue</button></span>, but also added another section (also in flint and with a gable) as a laundry. <br /><br /><img src="rhimages/laundry50.jpg" alt="" title="" width="367" height="279" style="display:block; margin-left:auto; margin-right:auto; text-align:center;" style="float:center;" /><br /><br />This purpose-built extension now assumes No 48 while the original Hill Cottage becomes No 50 as shown in the <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1895-image-236'); return false;">1895 directory</a>. Note <span class="GapSpan" id="GapSpan18"><input type="text" id="Gap18" onfocus="TrackFocus(18)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(18)">Clue</button></span> that No 52 Princes Road on the east side of the entrance to what is now "The Copse" is also a laundry. Mrs Lipscombe advertises herself as <span class="GapSpan" id="GapSpan19"><input type="text" id="Gap19" onfocus="TrackFocus(19)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(19)">Clue</button></span> a laundress and lace-cleaner. <br /><br />The <span class="GapSpan" id="GapSpan20"><input type="text" id="Gap20" onfocus="TrackFocus(20)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(20)">Clue</button></span> laundries in Crescent Road do not arrive until 1898 an 1899. The <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/towners-1898-image-154 '); return false;">1898 Directory</a> shows when William Tidey moves The Primrose Laundry from 10 Richmond Road to 20 Crescent Road. According to the publicity on the horse-drawn carriages pictured on page 40 of <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.roundhill.org.uk/main.php?sec=history&p=Local_History_Books '); return false;">Rose Hill to Round Hill: a Brighton Community</a>, The Primrose Laundry was <span class="GapSpan" id="GapSpan21"><input type="text" id="Gap21" onfocus="TrackFocus(21)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(21)">Clue</button></span> in 1884. The <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/towners-1899-image-113 '); return false;">1899 Directory</a> provides the first mention of F.S. Foster, owner of The Tivoli Laundry at 28 Crescent Road. <br /><br />An <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1890-image-155'); return false;">1890 Directory</a> lists 19 odd-numbered homes already <span class="GapSpan" id="GapSpan22"><input type="text" id="Gap22" onfocus="TrackFocus(22)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(22)">Clue</button></span> on the east side of Crescent Road, with Princes Villa as the only even numbered house - at 2 Crescent Road. There was therefore plenty of space for both the new laundries and new housing on the west side. The steep <span class="GapSpan" id="GapSpan23"><input type="text" id="Gap23" onfocus="TrackFocus(23)" onblur="LeaveGap()" class="GapBox" size="7"/></span> on the west side of Crescent Road probably made house construction more challenging.<br /><br />However, the strip of land subject to recent development between Crescent Road and Belton Road represents the <span class="GapSpan" id="GapSpan24"><input type="text" id="Gap24" onfocus="TrackFocus(24)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(24)">Clue</button></span> level in Round Hill, so it made very <span class="GapSpan" id="GapSpan25"><input type="text" id="Gap25" onfocus="TrackFocus(25)" onblur="LeaveGap()" class="GapBox" size="8"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(25)">Clue</button></span> drying field. It was no coincidence that the Belton Road windmill was also <span class="GapSpan" id="GapSpan26"><input type="text" id="Gap26" onfocus="TrackFocus(26)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(26)">Clue</button></span> on high ground.<br /><br /><img src="rhimages/55and57p.jpg" alt="" title="" width="600" height="450" style="display:block; margin-left:auto; margin-right:auto; text-align:center;" style="float:center;" /><br /><br />The <span class="GapSpan" id="GapSpan27"><input type="text" id="Gap27" onfocus="TrackFocus(27)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(27)">Clue</button></span> houses in Princes Road were the semi-detached ones numbered 55 and 57 at the summit of the <span class="GapSpan" id="GapSpan28"><input type="text" id="Gap28" onfocus="TrackFocus(28)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(28)">Clue</button></span> which date from 1867 unless you count Princes Villa which was built in 1866 by James Stapleton <span class="GapSpan" id="GapSpan29"><input type="text" id="Gap29" onfocus="TrackFocus(29)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(29)">Clue</button></span>, who appears in <a href="https://www.freecen.org.uk/search_records/59050478e9379091b1106c39?search_id=5c97987933045b990180a486" target="r">The 1871 census</a> as aged 54 and living at 71 North Road where he was an eating-house keeper. Also in the <a href="https://www.freecen.org.uk/search_records/59050478e9379091b1106c39?search_id=5c97987933045b990180a486" target="r">1871 census record</a> are his 19-year-old son Charles (a jeweller) and his 16-year-old son Alfred (then a butcher, but read page 15 of <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.roundhill.org.uk/main.php?sec=history&p=Local_History_Books'); return false;">Rose Hill to Round Hill: a Brighton Community</a> to see the position he rose to in a different business ). The site of James Stapleton's eating-house at 71 North Road is now occupied by a bathroom tile supplier, not far from The Heart and Hand Public House.<br /><br />The 1871 census also records the older of the eating-house keeper's sons, aged 31 and known as <a href="https://www.freecen.org.uk/search_records/59050478e9379091b1106c39?search_id=5c97987933045b990180a486" target="r">James H Stapleton</a>, as living with Mary A Stapleton (aged 31) and their daughter Mary (aged 4) at Princes Villa to the <span class="GapSpan" id="GapSpan30"><input type="text" id="Gap30" onfocus="TrackFocus(30)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(30)">Clue</button></span> of the junction of Princes Road and Crescent Road. Living in this <span class="GapSpan" id="GapSpan31"><input type="text" id="Gap31" onfocus="TrackFocus(31)" onblur="LeaveGap()" class="GapBox" size="8"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(31)">Clue</button></span> house built at his father's expense, James H. worked as a paper hanger. He has a sister, Kate, who is also no longer living at the family eating house in North Road. <br /><br /><img src="rhimages/prvilla1.jpg" alt="" title="" width="840" height="338" style="display:block; margin-left:auto; margin-right:auto; text-align:center;" style="float:center;" /> <br /><br />The stables originally belonging to the villa are now <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('https://www.facebook.com/pages/Albion-Plumbing-Supplies/1881289905453329 '); return false;">Albion Plumbing Supplies</a> at 36a <span class="GapSpan" id="GapSpan32"><input type="text" id="Gap32" onfocus="TrackFocus(32)" onblur="LeaveGap()" class="GapBox" size="7"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(32)">Clue</button></span> Road. <a href="https://www.freecen.org.uk/search_records/59050478e9379091b1106c39?search_id=5c97987933045b990180a486" target="r">The 1871 Census</a> shows Princes Villa as being in Princes Road where it is unnumbered.<br /><br />An <a style="cursor: pointer; text-decoration: underline; " onclick="window.open('http://www.mhms.org.uk/directories/pages-1881-image-137'); return false;">1881 Directory</a> lists Princes Villa as being the <span class="GapSpan" id="GapSpan33"><input type="text" id="Gap33" onfocus="TrackFocus(33)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(33)">Clue</button></span> property in Crescent Road, the occupant being James Stapleton <span class="GapSpan" id="GapSpan34"><input type="text" id="Gap34" onfocus="TrackFocus(34)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(34)">Clue</button></span>. However, James Stapleton Senior probably had Princes Villa built with his own retirement in mind. <a href="https://www.freecen.org.uk/search_records/59054e1ee9379091b134fe63?search_id=5c979a6d33045b990180a527" TARGET="r">The 1891 Census</a> has him as aged 75 living with his 78-year-old wife (Jane) and their 46-year-old daughter Kate Patton at Princes Villa, now numbered 2 Crecent Road. The younger James having moved out, his father <span class="GapSpan" id="GapSpan35"><input type="text" id="Gap35" onfocus="TrackFocus(35)" onblur="LeaveGap()" class="GapBox" size="8"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(35)">Clue</button></span> in Princes Villa 'Living On Own Means' until his <span class="GapSpan" id="GapSpan36"><input type="text" id="Gap36" onfocus="TrackFocus(36)" onblur="LeaveGap()" class="GapBox" size="6"/><button style="line-height: 1.0" class="FuncButton" onclick="ShowClue(36)">Clue</button></span> in 1892.<br /><br /><br /><img src="rhimages/prvilla2.jpg" alt="" title="" width="630" height="468" style="display:block; margin-left:auto; margin-right:auto; text-align:center;" style="float:center;" /> <br /><br /><br /> 
</div>
</form>
</div>



<button id="CheckButton2" class="FuncButton" onclick="CheckAnswers()">&nbsp;Check&nbsp;</button>



</div>

</div>


<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location='http://www.roundhill.org.uk'; return false;"> Index </button>



<button class="NavButton" onclick="location='http://www.roundhill.org.uk'; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
